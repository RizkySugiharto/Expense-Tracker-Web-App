openapi: 3.0.3
info:
  title: Expense Tracker API
  version: 1.0.11
  description: This is a simple of API which is managing expenses of any user/client.
servers:
  - url: http://localhost:3000/{version}
    variables:
      version:
        default: v1
        enum:
          - v1
components:
  securitySchemes:
    JWTAuth:
      type: apiKey
      in: cookie
      name: Token
security:
  - JWTAuth: []
tags:
  - name: accounts
    description: About account authentication
  - name: expenses
    description: About expenses of a user
paths:
  "/accounts/signup":
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: string
            example: |-
              username:user
              email:user@gmail.com
              password:user123
              
      summary: Used to create a user
      description: ''
      operationId: ''
      responses:
        201:
          description: If the operation is success
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "name": "user"
                    }
        409:
          description: If the user already exists
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "User's email is already exists"
                    }
        500:
          description: If the server error
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with server"
                    }
                  
      tags:
        - accounts
  "/accounts/signin":
    post:
      summary: Used to sign-in a user
      description: ''
      operationId: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: string
            example: |-
              email:user@gmail.com
              password:user123
      responses:
        200:
          description: If the operation is success
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "name": "user"
                    }
        409:
          description: If the email or password is invalid
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 401,
                      "error": "Unauthorized",
                      "message": "Email or password is invalid"
                    }
        500:
          description: If the server error
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with server"
                    }
                  
      tags:
        - accounts
  "/accounts/signout":
    post:
      summary: Used to sign-out a user
      description: ''
      operationId: ''
      responses:
        204:
          description: If the operation is success
          content:
            none:
              examples:
                default:
                  value: ''
        400:
          description: If the operation is failed (request is bad)
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server error
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with server"
                    }
                  
      tags:
        - accounts
  "/expenses/categories":
    get:
      summary: Used to get all available/supported categories
      description: ''
      operationId: ''
      responses:
        200:
          description: If the operation is success
          content:
            application/json:
              examples:
                default:
                  value:
                    [
                      "Groceries", 
                      "Leisure", 
                      "Electronics", 
                      "Utilities",
                      "Clothing",
                      "Health",
                      "Others"
                  ]
        400:
          description: If the operation is failed
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server is failed to handle the request
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with the server"
                    }
                  
      tags:
        - expenses
  "/expenses":
    get:
      summary: Used to get all user's expenses
      description: ''
      operationId: ''
      parameters:
        - name: date
          in: query
          description: Can be used to filter the expenses by the date
          schema:
            type: string
          examples:
            'past week':
              value: "past week"
            'last month':
              value: "last month"
            'last 3 months':
              value: "last 3 months"
            'custom':
              value: "01/07/2023-30/07/2023"
        - name: categories
          in: query
          description: Can be used to filter the expenses by the categories
          schema:
            type: string
            example: "Clothing,Health,Others"
      responses:
        200:
          description: If the operation is success
          content:
            application/json:
              examples:
                exists:
                  value:
                    [
                      {
                        "id": "abc123",
                        "amount": 100,
                        "description": "Example 1",
                        "date": "2024-07-24T15:27:45.047+00:00",
                        "category": "Others"
                      },
                      {
                        "id": "def456",
                        "amount": 120,
                        "description": "Example 2",
                        "date": "2024-07-24T16:27:45.047+00:00",
                        "category": "Utilities"
                      },
                      {
                        "id": "ghi789",
                        "amount": 50,
                        "description": "Example 3",
                        "date": "2024-07-24T17:27:45.047+00:00",
                        "category": "Health"
                      }
                    ]
                empty:
                  value: []
        400:
          description: If the operation is failed
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server is failed to handle the request
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with the server"
                    }
                  
      tags:
        - expenses
    post:
      summary: Used to create an expense
      description: ''
      operationId: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: string
            example: |-
              amount:100
              description:Example 1
      responses:
        201:
          description: If the operation is success
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "id": "abc123",
                      "amount": 100,
                      "description": "Example 1",
                      "date": "2024-07-24T15:27:45.047+00:00",
                      "category": "Others"
                    }
        400:
          description: If the operation is failed
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server is failed to handle the request
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with the server"
                    }
                  
      tags:
        - expenses
  "/expenses/{expenseId}":
    parameters:
      - name: expenseId
        in: path
        required: true
        description: Expense's Id
        schema:
          type: string
          example: abcdef12345
    put:
      summary: Used to update an expense
      description: ''
      operationId: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: string
            example: |-
              amount:120
              category:Clothing
      responses:
        200:
          description: If the operation is success. The return data is after the update.
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "id": "abc123",
                      "amount": 120,
                      "description": "Example 1",
                      "date": "2024-07-24T15:27:45.047+00:00",
                      "category": "Clothing"
                    }
        400:
          description: If the operation is failed
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server is failed to handle the request
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with the server"
                    }
                  
      tags:
        - expenses
    delete:
      summary: Used to delete an expense
      description: ''
      operationId: ''
      responses:
        204:
          description: If the operation is success
          content:
            none:
              examples:
                default:
                  value: ''
        400:
          description: If the operation is failed
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "Something went wrong with the request"
                    }
        500:
          description: If the server is failed to handle the request
          content:
            application/json:
              examples:
                default:
                  value:
                    {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "Something went wrong with the server"
                    }
                  
      tags:
        - expenses
